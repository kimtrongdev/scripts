class Options{constructor(){this.themeLink=document.querySelector("#theme-link"),this.storage=null,this.run()}run(){this.initStorage().then(()=>{this.bindMethods(),this.setThemeStyles(),this.getDomElements(),this.markCheckedElements(),this.initListeners()})}initStorage(){return new Promise(c=>{chrome.storage.local.get(a=>{this.storage=a,c()})})}bindMethods(){this.handleDataToRemove=this.handleDataToRemove.bind(this),this.onDomainRemove=this.onDomainRemove.bind(this),this.handleSaveClick=this.handleSaveClick.bind(this),this.handleDomainDblClick=this.handleDomainDblClick.bind(this)}setThemeStyles(){const b=this.storage.theme;this.themeLink.href="light"===b?chrome.runtime.getURL("css/options/options_light.css"):chrome.runtime.getURL("css/options/options_dark.css")}markCheckedElements(){try{this.getStorageData().then(j=>{const{timePeriod:a,timeInterval:b,dataToRemove:c,autorefresh:d,floatbtn:e,cookie_settings:f,audio:g,shortCuts:h}=j;this.markAutoResfreshElement(d),this.markFloatBtnElement(e),this.markAudioItem(g),this.markDeletingItems(c),this.markTimePeriod(a),this.markTimeInterval(b),this.markCookieSettings(f),this.markShortCuts(h),this.showElement({selector:"#main"})})}catch(b){this.renderFilters(cookie_settings),this.showElement({selector:"#main"})}}markAutoResfreshElement(b){b&&(this.autorefresh.checked=!0)}markFloatBtnElement(b){b&&(this.floatbtn.checked=!0)}markAudioItem(b){b&&(this.audio.checked=!0)}markShortCuts(b){b&&(this.shortCuts.checked=!0)}markDeletingItems(c){[].forEach.call(this.removeDataItems,a=>{a.checked=!!c.includes(a.id)})}markTimePeriod(c){for(let a=0;a<this.timePeriodItems.length;a++)this.timePeriodItems[a].id===c&&(this.timePeriodItems[a].checked=!0)}markTimeInterval(c){c+="";for(let a=0;a<this.timeIntervalItems.length;a++)this.timeIntervalItems[a].dataset.minutes===c&&(this.timeIntervalItems[a].checked=!0)}markCookieSettings(c){const a=c.inclusive?"_yes":"_no";document.querySelector("#cookies_filter_inclusive"+a).checked=!0,this.renderFilters(c)}renderFilters(b){b.filters.forEach(b=>this.renderFilter("storedItem",b))}renderFilter(g,a){const b={newItem:{domain:"domain hidden",input:"filter-input",save:"save"},storedItem:{domain:"domain",input:"filter-input hidden",save:"save hidden"}}[g],c=`<li class="suboption hidden">							<span class="${b.domain}" data-domain="${a}">${a}</span>							<input type="text" placeholder="e.g. '.domain.com' or 'sub.domain.com'" class="${b.input}"/>							<span class="${b.save}"></span>							<a href="#" class="remove">remove</a>						</li>`,d=$(c),e=$("#cookie-filters ol");e.append(d),d.fadeIn(100,()=>{d.removeClass("hidden"),$("input",d).focus()}),d.find("a.remove").click(this.onDomainRemove),d.find(".save").click(this.handleSaveClick),d.find(".domain").dblclick(this.handleDomainDblClick)}handleSaveClick(k){const a=k.target.closest("li"),b=a.querySelector("input"),c=b.value.trim(),d=a.querySelector(".domain").dataset.domain;if(c===d)return void this.showItemViewAfterSaving(a,d,b);const e=this.isDomainCorrect(c);if(!e)return this.showIncorrectText(b,"Please, type correct data!"),void b.classList.add("error");const f=this.getDomainForStoring(c),g=this.isDomainDublicated(f);if(g)return this.showIncorrectText(b,"This domain is already added!"),void b.classList.add("error");let h=JSON.parse(this.storage.cookie_settings);h.filters=h.filters.filter(b=>b!==d),h.filters.push(f);const i=JSON.stringify(h);chrome.storage.local.set({cookie_settings:i},()=>{this.showItemViewAfterSaving(a,f,b)})}showItemViewAfterSaving(e,a,b){e.querySelector(".save").classList.add("hidden"),e.querySelector("input").classList.add("hidden");const c=e.querySelector(".domain");c.setAttribute("data-domain",a),c.textContent=a,c.classList.remove("hidden"),b.classList.remove("error")}handleDomainDblClick(c){const a=c.target.closest("li");this.showItemViewOnEditing(a)}showItemViewOnEditing(d){d.querySelector(".save").classList.remove("hidden");const a=d.querySelector(".domain");a.classList.add("hidden");const b=d.querySelector("input");b.value=a.dataset.domain,b.classList.remove("hidden")}getValidInput(d){if(3>d.length)return!1;const a=d.split(".");if(2>a.length&&"localhost"!==d)return!1;2===a.length&&"."!==a[0][0]&&(a[0][0]="."+a[0][0]);const b=a.join(".");return b}isDomainCorrect(b){return /(?!:\/\/)([a-zA-Z0-9-]+\.){0,5}[a-zA-Z0-9-][a-zA-Z0-9-]+\.[a-zA-Z]{2,64}?([^:\/\n?]?)/gi.test(b)}getDomainForStoring(e){const a=this.getHostname(e),b=a.split(".");let c=!1;return 2===b.length&&(c=!0),c?"."+a:a}getHostname(d){d=d.replace("www.","");var e=d.indexOf("//")+2;if(1<e){var b=d.indexOf("/",e);return 0<b?d.substring(e,b):(b=d.indexOf("?",e),0<b?d.substring(e,b):d.substring(e))}return d}getStorageData(){return new Promise(k=>{chrome.storage.local.get(a=>{const b=a.audio,c=a.timePeriod,d=a.timeInterval,e=JSON.parse(a.dataToRemove),f=a.autorefresh,g=a.floatbtn,h=JSON.parse(a.cookie_settings),i=a.shortCuts;k({audio:b,timePeriod:c,timeInterval:d,dataToRemove:e,autorefresh:f,floatbtn:g,cookie_settings:h,shortCuts:i})})})}getDomElements(){this.autorefresh=document.querySelector("#autorefresh"),this.floatbtn=document.querySelector("#floatbtn"),this.audio=document.querySelector("#audio"),this.shortCuts=document.querySelector("#shortCuts"),this.removeDataItems=document.querySelectorAll("#remove-list li > input"),this.timePeriodItems=document.querySelectorAll("#time-period input"),this.timeIntervalItems=document.querySelectorAll("#time-interval input"),this.cookieFilters=document.querySelector("a.filters"),this.cookiesInclusiveInputs=document.querySelectorAll("#cookie-filters p input"),this.addDomainBtn=document.querySelector("a.add")}initListeners(){this.initDomListeners(),this.initStorageListeners()}initDomListeners(){this.autorefresh.addEventListener("change",this.handleCommonSettings),this.floatbtn.addEventListener("change",this.handleCommonSettings),this.audio.addEventListener("change",this.handleCommonSettings),this.shortCuts.addEventListener("change",this.handleCommonSettings),[].forEach.call(this.removeDataItems,b=>b.addEventListener("change",this.handleDataToRemove)),[].forEach.call(this.timePeriodItems,b=>b.addEventListener("change",this.handleTimePeriod)),[].forEach.call(this.timeIntervalItems,b=>b.addEventListener("change",this.handleTimeInterval)),this.cookieFilters.addEventListener("click",this.handleFilters),[].forEach.call(this.cookiesInclusiveInputs,b=>b.addEventListener("change",this.handleInclusiveInputs)),this.addDomainBtn.addEventListener("click",b=>(b.preventDefault(),this.handleAddDomain("",!0),!1))}initStorageListeners(){chrome.storage.onChanged.addListener(b=>{this.handleStorageChanges(b)})}handleCommonSettings(b){chrome.storage.local.set({[b.target.id]:b.target.checked},()=>{})}handleDataToRemove(){const c=[];[].forEach.call(this.removeDataItems,a=>{a.checked&&c.push(a.value)}),chrome.storage.local.set({dataToRemove:JSON.stringify(c)},()=>{})}handleTimePeriod(b){chrome.storage.local.set({timePeriod:b.target.value},()=>{})}handleTimeInterval(b){chrome.runtime.sendMessage({action:"intervalChange",value:b.target.dataset.minutes},()=>{})}handleFilters(d){d.preventDefault();const a=$(this).closest("li"),b=$("aside#cookie-filters",a);return b.slideToggle(),!1}handleInclusiveInputs(d){chrome.storage.local.get(["cookie_settings"],a=>{const b=JSON.parse(a.cookie_settings);b.inclusive="no"!==d.target.value,chrome.storage.local.set({cookie_settings:JSON.stringify(b)},()=>{})})}handleAddDomain(){this.renderFilter("newItem")}handleStorageChanges(d){const a=Object.keys(d);a.forEach(a=>{switch(this.storage[a]=d[a].newValue,a){case"theme":this.setThemeStyles();break;case"dataToRemove":const b=JSON.parse(d.dataToRemove.newValue);this.markDeletingItems(b);break;case"timePeriod":this.markTimePeriod(d.timePeriod.newValue);break;case"timeInterval":this.markTimeInterval(d.timeInterval.newValue);break;default:}})}onDomainRemove(f){f.preventDefault();const a=$(f.target).closest("li"),b=a.find(".domain")[0].dataset.domain;let c=JSON.parse(this.storage.cookie_settings);c.filters=c.filters.filter(c=>c!==b);const d=JSON.stringify(c);return chrome.storage.local.set({cookie_settings:d},()=>{a.delay(0),a.slideToggle(100,()=>{$(a).remove()})}),!1}showElement(b){b.selector?document.querySelector(b.selector).classList.remove("hidden"):element.classList.remove("hidden")}isDomainDublicated(d){const a=JSON.parse(this.storage.cookie_settings).filters;let e=!1;return a.forEach(a=>{(a===d||`.${d}`===a)&&(e=!0)}),e}showIncorrectText(c,a){c.value=a,c.classList.add("error")}}const guruOptions=new Options;